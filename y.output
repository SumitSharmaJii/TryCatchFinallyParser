Grammar

    0 $accept: START $end

    1 START: '{' LINES '}'

    2 LINES: TRY
    3      | TRY LINES
    4      | EXPRESSION
    5      | EXPRESSION LINES

    6 TRY: try BODY CATCH_OR_FINALLY

    7 CATCH_OR_FINALLY: CATCH BODY
    8                 | finally BODY
    9                 | CATCH BODY CATCH_OR_FINALLY

   10 CATCH: catch '(' PARAM ')'

   11 PARAM: id '|' PARAM
   12      | id id

   13 BODY: '{' '}'
   14     | '{' LINES '}'

   15 EXPRESSION: data_type id ';'
   16           | data_type id '=' num ';'
   17           | id '=' num ';'
   18           | id '=' id '+' num ';'
   19           | id '=' id '-' num ';'
   20           | id '=' id '*' num ';'
   21           | id '=' id '/' num ';'
   22           | UNARY_EXPRESSION ';'

   23 UNARY_EXPRESSION: UNARY_EXPRESSION '+' '+'
   24                 | UNARY_EXPRESSION '-' '-'
   25                 | '+' '+' UNARY_EXPRESSION
   26                 | '-' '-' UNARY_EXPRESSION
   27                 | id


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10
')' (41) 10
'*' (42) 20
'+' (43) 18 23 25
'-' (45) 19 24 26
'/' (47) 21
';' (59) 15 16 17 18 19 20 21 22
'=' (61) 16 17 18 19 20 21
'{' (123) 1 13 14
'|' (124) 11
'}' (125) 1 13 14
error (256)
id (258) 11 12 15 16 17 18 19 20 21 27
num (259) 16 17 18 19 20 21
try (260) 6
catch (261) 10
finally (262) 8
data_type (263) 15 16


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
START (21)
    on left: 1, on right: 0
LINES (22)
    on left: 2 3 4 5, on right: 1 3 5 14
TRY (23)
    on left: 6, on right: 2 3
CATCH_OR_FINALLY (24)
    on left: 7 8 9, on right: 6 9
CATCH (25)
    on left: 10, on right: 7 9
PARAM (26)
    on left: 11 12, on right: 10 11
BODY (27)
    on left: 13 14, on right: 6 7 8 9
EXPRESSION (28)
    on left: 15 16 17 18 19 20 21 22, on right: 4 5
UNARY_EXPRESSION (29)
    on left: 23 24 25 26 27, on right: 22 23 24 25 26


state 0

    0 $accept: . START $end

    '{'  shift, and go to state 1

    START  go to state 2


state 1

    1 START: '{' . LINES '}'

    id         shift, and go to state 3
    try        shift, and go to state 4
    data_type  shift, and go to state 5
    '+'        shift, and go to state 6
    '-'        shift, and go to state 7

    LINES             go to state 8
    TRY               go to state 9
    EXPRESSION        go to state 10
    UNARY_EXPRESSION  go to state 11


state 2

    0 $accept: START . $end

    $end  shift, and go to state 12


state 3

   17 EXPRESSION: id . '=' num ';'
   18           | id . '=' id '+' num ';'
   19           | id . '=' id '-' num ';'
   20           | id . '=' id '*' num ';'
   21           | id . '=' id '/' num ';'
   27 UNARY_EXPRESSION: id .

    '='  shift, and go to state 13

    $default  reduce using rule 27 (UNARY_EXPRESSION)


state 4

    6 TRY: try . BODY CATCH_OR_FINALLY

    '{'  shift, and go to state 14

    BODY  go to state 15


state 5

   15 EXPRESSION: data_type . id ';'
   16           | data_type . id '=' num ';'

    id  shift, and go to state 16


state 6

   25 UNARY_EXPRESSION: '+' . '+' UNARY_EXPRESSION

    '+'  shift, and go to state 17


state 7

   26 UNARY_EXPRESSION: '-' . '-' UNARY_EXPRESSION

    '-'  shift, and go to state 18


state 8

    1 START: '{' LINES . '}'

    '}'  shift, and go to state 19


state 9

    2 LINES: TRY .
    3      | TRY . LINES

    id         shift, and go to state 3
    try        shift, and go to state 4
    data_type  shift, and go to state 5
    '+'        shift, and go to state 6
    '-'        shift, and go to state 7

    $default  reduce using rule 2 (LINES)

    LINES             go to state 20
    TRY               go to state 9
    EXPRESSION        go to state 10
    UNARY_EXPRESSION  go to state 11


state 10

    4 LINES: EXPRESSION .
    5      | EXPRESSION . LINES

    id         shift, and go to state 3
    try        shift, and go to state 4
    data_type  shift, and go to state 5
    '+'        shift, and go to state 6
    '-'        shift, and go to state 7

    $default  reduce using rule 4 (LINES)

    LINES             go to state 21
    TRY               go to state 9
    EXPRESSION        go to state 10
    UNARY_EXPRESSION  go to state 11


state 11

   22 EXPRESSION: UNARY_EXPRESSION . ';'
   23 UNARY_EXPRESSION: UNARY_EXPRESSION . '+' '+'
   24                 | UNARY_EXPRESSION . '-' '-'

    '+'  shift, and go to state 22
    '-'  shift, and go to state 23
    ';'  shift, and go to state 24


state 12

    0 $accept: START $end .

    $default  accept


state 13

   17 EXPRESSION: id '=' . num ';'
   18           | id '=' . id '+' num ';'
   19           | id '=' . id '-' num ';'
   20           | id '=' . id '*' num ';'
   21           | id '=' . id '/' num ';'

    id   shift, and go to state 25
    num  shift, and go to state 26


state 14

   13 BODY: '{' . '}'
   14     | '{' . LINES '}'

    id         shift, and go to state 3
    try        shift, and go to state 4
    data_type  shift, and go to state 5
    '+'        shift, and go to state 6
    '-'        shift, and go to state 7
    '}'        shift, and go to state 27

    LINES             go to state 28
    TRY               go to state 9
    EXPRESSION        go to state 10
    UNARY_EXPRESSION  go to state 11


state 15

    6 TRY: try BODY . CATCH_OR_FINALLY

    catch    shift, and go to state 29
    finally  shift, and go to state 30

    CATCH_OR_FINALLY  go to state 31
    CATCH             go to state 32


state 16

   15 EXPRESSION: data_type id . ';'
   16           | data_type id . '=' num ';'

    '='  shift, and go to state 33
    ';'  shift, and go to state 34


state 17

   25 UNARY_EXPRESSION: '+' '+' . UNARY_EXPRESSION

    id   shift, and go to state 35
    '+'  shift, and go to state 6
    '-'  shift, and go to state 7

    UNARY_EXPRESSION  go to state 36


state 18

   26 UNARY_EXPRESSION: '-' '-' . UNARY_EXPRESSION

    id   shift, and go to state 35
    '+'  shift, and go to state 6
    '-'  shift, and go to state 7

    UNARY_EXPRESSION  go to state 37


state 19

    1 START: '{' LINES '}' .

    $default  reduce using rule 1 (START)


state 20

    3 LINES: TRY LINES .

    $default  reduce using rule 3 (LINES)


state 21

    5 LINES: EXPRESSION LINES .

    $default  reduce using rule 5 (LINES)


state 22

   23 UNARY_EXPRESSION: UNARY_EXPRESSION '+' . '+'

    '+'  shift, and go to state 38


state 23

   24 UNARY_EXPRESSION: UNARY_EXPRESSION '-' . '-'

    '-'  shift, and go to state 39


state 24

   22 EXPRESSION: UNARY_EXPRESSION ';' .

    $default  reduce using rule 22 (EXPRESSION)


state 25

   18 EXPRESSION: id '=' id . '+' num ';'
   19           | id '=' id . '-' num ';'
   20           | id '=' id . '*' num ';'
   21           | id '=' id . '/' num ';'

    '+'  shift, and go to state 40
    '-'  shift, and go to state 41
    '*'  shift, and go to state 42
    '/'  shift, and go to state 43


state 26

   17 EXPRESSION: id '=' num . ';'

    ';'  shift, and go to state 44


state 27

   13 BODY: '{' '}' .

    $default  reduce using rule 13 (BODY)


state 28

   14 BODY: '{' LINES . '}'

    '}'  shift, and go to state 45


state 29

   10 CATCH: catch . '(' PARAM ')'

    '('  shift, and go to state 46


state 30

    8 CATCH_OR_FINALLY: finally . BODY

    '{'  shift, and go to state 14

    BODY  go to state 47


state 31

    6 TRY: try BODY CATCH_OR_FINALLY .

    $default  reduce using rule 6 (TRY)


state 32

    7 CATCH_OR_FINALLY: CATCH . BODY
    9                 | CATCH . BODY CATCH_OR_FINALLY

    '{'  shift, and go to state 14

    BODY  go to state 48


state 33

   16 EXPRESSION: data_type id '=' . num ';'

    num  shift, and go to state 49


state 34

   15 EXPRESSION: data_type id ';' .

    $default  reduce using rule 15 (EXPRESSION)


state 35

   27 UNARY_EXPRESSION: id .

    $default  reduce using rule 27 (UNARY_EXPRESSION)


state 36

   23 UNARY_EXPRESSION: UNARY_EXPRESSION . '+' '+'
   24                 | UNARY_EXPRESSION . '-' '-'
   25                 | '+' '+' UNARY_EXPRESSION .

    $default  reduce using rule 25 (UNARY_EXPRESSION)


state 37

   23 UNARY_EXPRESSION: UNARY_EXPRESSION . '+' '+'
   24                 | UNARY_EXPRESSION . '-' '-'
   26                 | '-' '-' UNARY_EXPRESSION .

    $default  reduce using rule 26 (UNARY_EXPRESSION)


state 38

   23 UNARY_EXPRESSION: UNARY_EXPRESSION '+' '+' .

    $default  reduce using rule 23 (UNARY_EXPRESSION)


state 39

   24 UNARY_EXPRESSION: UNARY_EXPRESSION '-' '-' .

    $default  reduce using rule 24 (UNARY_EXPRESSION)


state 40

   18 EXPRESSION: id '=' id '+' . num ';'

    num  shift, and go to state 50


state 41

   19 EXPRESSION: id '=' id '-' . num ';'

    num  shift, and go to state 51


state 42

   20 EXPRESSION: id '=' id '*' . num ';'

    num  shift, and go to state 52


state 43

   21 EXPRESSION: id '=' id '/' . num ';'

    num  shift, and go to state 53


state 44

   17 EXPRESSION: id '=' num ';' .

    $default  reduce using rule 17 (EXPRESSION)


state 45

   14 BODY: '{' LINES '}' .

    $default  reduce using rule 14 (BODY)


state 46

   10 CATCH: catch '(' . PARAM ')'

    id  shift, and go to state 54

    PARAM  go to state 55


state 47

    8 CATCH_OR_FINALLY: finally BODY .

    $default  reduce using rule 8 (CATCH_OR_FINALLY)


state 48

    7 CATCH_OR_FINALLY: CATCH BODY .
    9                 | CATCH BODY . CATCH_OR_FINALLY

    catch    shift, and go to state 29
    finally  shift, and go to state 30

    $default  reduce using rule 7 (CATCH_OR_FINALLY)

    CATCH_OR_FINALLY  go to state 56
    CATCH             go to state 32


state 49

   16 EXPRESSION: data_type id '=' num . ';'

    ';'  shift, and go to state 57


state 50

   18 EXPRESSION: id '=' id '+' num . ';'

    ';'  shift, and go to state 58


state 51

   19 EXPRESSION: id '=' id '-' num . ';'

    ';'  shift, and go to state 59


state 52

   20 EXPRESSION: id '=' id '*' num . ';'

    ';'  shift, and go to state 60


state 53

   21 EXPRESSION: id '=' id '/' num . ';'

    ';'  shift, and go to state 61


state 54

   11 PARAM: id . '|' PARAM
   12      | id . id

    id   shift, and go to state 62
    '|'  shift, and go to state 63


state 55

   10 CATCH: catch '(' PARAM . ')'

    ')'  shift, and go to state 64


state 56

    9 CATCH_OR_FINALLY: CATCH BODY CATCH_OR_FINALLY .

    $default  reduce using rule 9 (CATCH_OR_FINALLY)


state 57

   16 EXPRESSION: data_type id '=' num ';' .

    $default  reduce using rule 16 (EXPRESSION)


state 58

   18 EXPRESSION: id '=' id '+' num ';' .

    $default  reduce using rule 18 (EXPRESSION)


state 59

   19 EXPRESSION: id '=' id '-' num ';' .

    $default  reduce using rule 19 (EXPRESSION)


state 60

   20 EXPRESSION: id '=' id '*' num ';' .

    $default  reduce using rule 20 (EXPRESSION)


state 61

   21 EXPRESSION: id '=' id '/' num ';' .

    $default  reduce using rule 21 (EXPRESSION)


state 62

   12 PARAM: id id .

    $default  reduce using rule 12 (PARAM)


state 63

   11 PARAM: id '|' . PARAM

    id  shift, and go to state 54

    PARAM  go to state 65


state 64

   10 CATCH: catch '(' PARAM ')' .

    $default  reduce using rule 10 (CATCH)


state 65

   11 PARAM: id '|' PARAM .

    $default  reduce using rule 11 (PARAM)
